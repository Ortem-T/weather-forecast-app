{"ast":null,"code":"var _jsxFileName = \"/Users/ortem/dev/WeatherApp/weather-forecast-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CityInput from './components/CityInput';\nimport WeatherChart from './components/WeatherChart';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [selectedCities, setSelectedCities] = useState([]);\n  const addCity = city => {\n    if (!cities.includes(city)) {\n      setCities([...cities, city]);\n      setSelectedCities([...selectedCities, city]); // Добавляем город в выбранные города\n    }\n  };\n  const toggleCitySelection = city => {\n    if (selectedCities.includes(city)) {\n      setSelectedCities(selectedCities.filter(selectedCity => selectedCity !== city));\n    } else {\n      setSelectedCities([...selectedCities, city]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Forecast Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CityInput, {\n      onAddCity: addCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), cities.length > 0 && /*#__PURE__*/_jsxDEV(WeatherChart, {\n      cities: selectedCities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [cities.length > 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Comparing Weather Data for:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => toggleCitySelection(city),\n          style: {\n            cursor: 'pointer',\n            color: selectedCities.includes(city) ? 'blue' : 'black'\n          },\n          children: city\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"j4H5LIWl2SMSbmLPHGi4/4icWwE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CityInput","WeatherChart","jsxDEV","_jsxDEV","App","_s","cities","setCities","selectedCities","setSelectedCities","addCity","city","includes","toggleCitySelection","filter","selectedCity","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddCity","length","map","index","onClick","style","cursor","color","_c","$RefreshReg$"],"sources":["/Users/ortem/dev/WeatherApp/weather-forecast-app/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport CityInput from './components/CityInput';\nimport WeatherChart from './components/WeatherChart';\nimport './styles/App.css';\n\nconst App: React.FC = () => {\n    const [cities, setCities] = useState<string[]>([]);\n    const [selectedCities, setSelectedCities] = useState<string[]>([]);\n\n    const addCity = (city: string) => {\n        if (!cities.includes(city)) {\n            setCities([...cities, city]);\n            setSelectedCities([...selectedCities, city]); // Добавляем город в выбранные города\n        }\n    };\n\n    const toggleCitySelection = (city: string) => {\n        if (selectedCities.includes(city)) {\n            setSelectedCities(selectedCities.filter(selectedCity => selectedCity !== city));\n        } else {\n            setSelectedCities([...selectedCities, city]);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Weather Forecast Application</h1>\n            <CityInput onAddCity={addCity} />\n            {cities.length > 0 && <WeatherChart cities={selectedCities} />}\n            <div>\n                {cities.length > 0 && (\n                    <h2>Comparing Weather Data for:</h2>\n                )}\n                <ul>\n                    {cities.map((city, index) => (\n                        <li key={index} onClick={() => toggleCitySelection(city)} style={{ cursor: 'pointer', color: selectedCities.includes(city) ? 'blue' : 'black' }}>\n                            {city}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAW,EAAE,CAAC;EAClD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAW,EAAE,CAAC;EAElE,MAAMW,OAAO,GAAIC,IAAY,IAAK;IAC9B,IAAI,CAACL,MAAM,CAACM,QAAQ,CAACD,IAAI,CAAC,EAAE;MACxBJ,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEK,IAAI,CAAC,CAAC;MAC5BF,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAEG,IAAI,CAAC,CAAC,CAAC,CAAC;IAClD;EACJ,CAAC;EAED,MAAME,mBAAmB,GAAIF,IAAY,IAAK;IAC1C,IAAIH,cAAc,CAACI,QAAQ,CAACD,IAAI,CAAC,EAAE;MAC/BF,iBAAiB,CAACD,cAAc,CAACM,MAAM,CAACC,YAAY,IAAIA,YAAY,KAAKJ,IAAI,CAAC,CAAC;IACnF,CAAC,MAAM;MACHF,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAEG,IAAI,CAAC,CAAC;IAChD;EACJ,CAAC;EAED,oBACIR,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBd,OAAA;MAAAc,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrClB,OAAA,CAACH,SAAS;MAACsB,SAAS,EAAEZ;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChCf,MAAM,CAACiB,MAAM,GAAG,CAAC,iBAAIpB,OAAA,CAACF,YAAY;MAACK,MAAM,EAAEE;IAAe;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9DlB,OAAA;MAAAc,QAAA,GACKX,MAAM,CAACiB,MAAM,GAAG,CAAC,iBACdpB,OAAA;QAAAc,QAAA,EAAI;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CACtC,eACDlB,OAAA;QAAAc,QAAA,EACKX,MAAM,CAACkB,GAAG,CAAC,CAACb,IAAI,EAAEc,KAAK,kBACpBtB,OAAA;UAAgBuB,OAAO,EAAEA,CAAA,KAAMb,mBAAmB,CAACF,IAAI,CAAE;UAACgB,KAAK,EAAE;YAAEC,MAAM,EAAE,SAAS;YAAEC,KAAK,EAAErB,cAAc,CAACI,QAAQ,CAACD,IAAI,CAAC,GAAG,MAAM,GAAG;UAAQ,CAAE;UAAAM,QAAA,EAC3IN;QAAI,GADAc,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAChB,EAAA,CAtCID,GAAa;AAAA0B,EAAA,GAAb1B,GAAa;AAwCnB,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}