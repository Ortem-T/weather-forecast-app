{"ast":null,"code":"var _jsxFileName = \"/Users/ortem/dev/WeatherApp/weather-forecast-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CityInput from './components/CityInput';\nimport WeatherChart from './components/WeatherChart';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const addCity = city => {\n    if (!cities.includes(city)) {\n      setCities([...cities, city]);\n    }\n    setSelectedCity(city);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Forecast Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CityInput, {\n      onAddCity: addCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), selectedCity && /*#__PURE__*/_jsxDEV(WeatherChart, {\n      city: selectedCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [cities.length > 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Comparing Weather Data for:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: city\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"WK8am8gwUwDwExf0j/NWiVssIco=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CityInput","WeatherChart","jsxDEV","_jsxDEV","App","_s","cities","setCities","selectedCity","setSelectedCity","addCity","city","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddCity","length","map","index","_c","$RefreshReg$"],"sources":["/Users/ortem/dev/WeatherApp/weather-forecast-app/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport CityInput from './components/CityInput';\nimport WeatherChart from './components/WeatherChart';\nimport './styles/App.css';\n\nconst App: React.FC = () => {\n    const [cities, setCities] = useState<string[]>([]);\n    const [selectedCity, setSelectedCity] = useState<string | null>(null);\n\n    const addCity = (city: string) => {\n        if (!cities.includes(city)) {\n            setCities([...cities, city]);\n        }\n        setSelectedCity(city);\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Weather Forecast Application</h1>\n            <CityInput onAddCity={addCity} />\n            {selectedCity && <WeatherChart city={selectedCity} />}\n            <div>\n                {cities.length > 0 && (\n                    <h2>Comparing Weather Data for:</h2>\n                )}\n                <ul>\n                    {cities.map((city, index) => (\n                        <li key={index}>{city}</li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAW,EAAE,CAAC;EAClD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EAErE,MAAMW,OAAO,GAAIC,IAAY,IAAK;IAC9B,IAAI,CAACL,MAAM,CAACM,QAAQ,CAACD,IAAI,CAAC,EAAE;MACxBJ,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEK,IAAI,CAAC,CAAC;IAChC;IACAF,eAAe,CAACE,IAAI,CAAC;EACzB,CAAC;EAED,oBACIR,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBX,OAAA;MAAAW,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCf,OAAA,CAACH,SAAS;MAACmB,SAAS,EAAET;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChCV,YAAY,iBAAIL,OAAA,CAACF,YAAY;MAACU,IAAI,EAAEH;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrDf,OAAA;MAAAW,QAAA,GACKR,MAAM,CAACc,MAAM,GAAG,CAAC,iBACdjB,OAAA;QAAAW,QAAA,EAAI;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CACtC,eACDf,OAAA;QAAAW,QAAA,EACKR,MAAM,CAACe,GAAG,CAAC,CAACV,IAAI,EAAEW,KAAK,kBACpBnB,OAAA;UAAAW,QAAA,EAAiBH;QAAI,GAAZW,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAC7B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACb,EAAA,CA5BID,GAAa;AAAAmB,EAAA,GAAbnB,GAAa;AA8BnB,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}