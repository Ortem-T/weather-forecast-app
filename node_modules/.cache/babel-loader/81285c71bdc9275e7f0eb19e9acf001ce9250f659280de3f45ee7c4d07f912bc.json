{"ast":null,"code":"var _jsxFileName = \"/Users/ortem/dev/WeatherApp/weather-forecast-app/src/components/WeatherChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\nimport { useWeatherData } from '../hooks/useWeatherData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherChart = ({\n  city\n}) => {\n  _s();\n  const [dataType, setDataType] = useState('temperature');\n  const {\n    weatherData,\n    loading,\n    error\n  } = useWeatherData(city);\n  const handleDataTypeChange = event => {\n    setDataType(event.target.value);\n  };\n  const getChartData = () => {\n    if (!weatherData) return [];\n    return weatherData.list.map(item => ({\n      time: item.dt_txt,\n      value: dataType === 'temperature' ? item.main.temp : dataType === 'pressure' ? item.main.pressure : dataType === 'humidity' ? item.main.humidity : item.wind.speed\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleDataTypeChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"temperature\",\n        children: \"Temperature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pressure\",\n        children: \"Pressure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"humidity\",\n        children: \"Humidity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"wind\",\n        children: \"Wind Speed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error fetching data: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: getChartData(),\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"value\",\n          stroke: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherChart, \"6Iutenv9XzIpuonFp6Zg9O+LUEc=\", false, function () {\n  return [useWeatherData];\n});\n_c = WeatherChart;\nexport default WeatherChart;\nvar _c;\n$RefreshReg$(_c, \"WeatherChart\");","map":{"version":3,"names":["React","useState","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","Legend","ResponsiveContainer","useWeatherData","jsxDEV","_jsxDEV","WeatherChart","city","_s","dataType","setDataType","weatherData","loading","error","handleDataTypeChange","event","target","value","getChartData","list","map","item","time","dt_txt","main","temp","pressure","humidity","wind","speed","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","width","height","data","strokeDasharray","dataKey","type","stroke","_c","$RefreshReg$"],"sources":["/Users/ortem/dev/WeatherApp/weather-forecast-app/src/components/WeatherChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\nimport { useWeatherData } from '../hooks/useWeatherData';\nimport { WeatherData } from '../types';\n\nconst WeatherChart: React.FC<{ city: string }> = ({ city }) => {\n    const [dataType, setDataType] = useState<string>('temperature');\n    const { weatherData, loading, error } = useWeatherData(city);\n\n    const handleDataTypeChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        setDataType(event.target.value);\n    };\n\n    const getChartData = (): WeatherData[] => {\n        if (!weatherData) return [];\n        return weatherData.list.map(item => ({\n            time: item.dt_txt,\n            value: dataType === 'temperature' ? item.main.temp :\n                   dataType === 'pressure' ? item.main.pressure :\n                   dataType === 'humidity' ? item.main.humidity :\n                   item.wind.speed\n        }));\n    };\n\n    return (\n        <div>\n            <select onChange={handleDataTypeChange}>\n                <option value=\"temperature\">Temperature</option>\n                <option value=\"pressure\">Pressure</option>\n                <option value=\"humidity\">Humidity</option>\n                <option value=\"wind\">Wind Speed</option>\n            </select>\n            {loading && <p>Loading...</p>}\n            {error && <p>Error fetching data: {error}</p>}\n            {!loading && !error && (\n                <ResponsiveContainer width=\"100%\" height={300}>\n                    <LineChart data={getChartData()}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"time\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\n                    </LineChart>\n                </ResponsiveContainer>\n            )}\n        </div>\n    );\n};\n\nexport default WeatherChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}